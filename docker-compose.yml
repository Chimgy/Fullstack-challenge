version: '3.8'

services:
  # PostgresQL Database Configs
  postgres:
    image: postgres:15-alpine
    container_name: FSC_database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: FSC_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  # NextJS Backend Configs
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: FSC_backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: FSC_db
      PORT: 3000
      FRONTEND_URL: http://localhost:3001
      HOST: 0.0.0.0
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./backend:/app:cached
      - /app/node_modules
    command: npm run start:dev
  
  # REACT frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: FSC_frontend
    ports:
      - "3001:3000"
    networks:
      - app-network
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    environment:
      REACT_APP_BACKEND_URL: http://localhost:3000
      HOST: 0.0.0.0
      WDS_SOCKET_HOST: localhost
      WDS_SOCKET_PORT: 3001
    stdin_open: true
    tty: true
   
networks:
  app-network:
    driver: bridge
  
volumes:
  postgres_data: